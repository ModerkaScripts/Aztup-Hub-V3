local Services = sharedRequire('../utils/Services.lua');
local library = sharedRequire('../UILibrary.lua');
local Utility = sharedRequire('../utils/Utility.lua');
local Maid = sharedRequire('../utils/Maid.lua');

local Players, RunService, UserInputService, ReplicatedFirst = Services:Get('Players', 'RunService', 'UserInputService', 'ReplicatedFirst');
local LocalPlayer = Players.LocalPlayer;

local column1, column2 = unpack(library.columns);

local localSection = column1:AddSection('Local');
local otherSection = column1:AddSection('Other');
local gunModsSection = column2:AddSection('Gun Mods');
local silentAimSection = column1:AddSection('Combat');

local maid = Maid.new();

local function getActor()
    for _, v in next, ReplicatedFirst:GetChildren() do
        if (v:IsA('Actor') and v:FindFirstChildWhichIsA('LocalScript')) then
            return v;
        end;
    end;
end;

local actor = getActor();
local commId, commEvent = originalFunctions.createCommChannel();
local playerEntries = {};

local actorLoaded = false;

local currentGun = {};
currentGun.weaponType = '';

local menuScreenGuiIsEnabled = false;

local code = [[
syn.run_secure_lua("CUZ8aUS63rMF+QaMGOc08K2m4SYDQxzI.", ...)
]];

commEvent:Connect(function(updateType, t)
    SX_VM_CNONE();
    if (updateType == 1) then
        local newT = {};

        for username, data in next, t do
            local player = Players:FindFirstChild(username);
            if (not player) then continue end;

            newT[player] = data;
        end;

        t = newT;

        playerEntries = t;
    elseif (updateType == 'ready') then
        actorLoaded = true;
    elseif (updateType == 5) then
        currentGun = t;
    elseif (updateType == 8) then
        menuScreenGuiIsEnabled = t;
    end;
end);

originalFunctions.runOnActor(actor, code, commId);

print('Waiting for actor to load');
repeat task.wait(); until actorLoaded;

function Utility:getCharacter(player)
    SX_VM_CNONE();

    if(player == LocalPlayer) then
        local playerHumanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid');
        if(not playerHumanoid) then return end;

        return LocalPlayer.Character, playerHumanoid.Health, playerHumanoid.MaxHealth;
    end;

    local playerCharacter = playerEntries[player];
    if(not playerCharacter or not playerCharacter.isAlive) then return end;
    local currentHealth, maxHealth = playerCharacter.currentHealth, playerCharacter.maxHealth;

    playerCharacter = playerCharacter.head;
    return playerCharacter.Parent, maxHealth, (currentHealth / maxHealth ) * 100, currentHealth;
end;

function Utility:getRootPart(player)
    SX_VM_CNONE();

    if(player == LocalPlayer) then
        local rootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('HumanoidRootPart');
        if(not rootPart) then return end;

        return rootPart;
    end;

    local playerCharacter = playerEntries[player]
    if(not playerCharacter or not playerCharacter.isAlive) then return end;

    return playerCharacter.torso;
end;

local function getAimPart()
    SX_VM_CNONE();
    local Enabled = library.flags.silentAim and library.flags.silentAimHitChance >= math.random(1, 100)
    if (not Enabled) then return false end;

    local closestPlayer = Utility:getClosestCharacter();
    if (not closestPlayer) then return false end;

    local playerCharacter = playerEntries[closestPlayer.Player];
    if (not playerCharacter) then return false end;

    local body = playerCharacter[library.flags.silentAimHitPart];
    if (not body) then return false end;

    if (currentGun.weaponType == 'Melee') then return end;
    return body;
end;

task.spawn(function()
    while task.wait() do
        debug.profilebegin('update all entries 2');
        commEvent:Fire(4, getAimPart());
        debug.profileend();
    end;
end);

local camera = workspace.CurrentCamera;

local materials = {};

for _, v in next, Enum.Material:GetEnumItems() do
    table.insert(materials, v.Name);
end;

local killSayMessages = {
    'You just got destroyed by Aztup Hub',
    'Gonna cry?',
    'It\'s not hacks, just my insane gaming chair',
    'Take the L',
    'aztupscripts.xyz',
    'Git gud',
    'Ur bad',
    'Literal trash'
};

local killFeedContainer = LocalPlayer.PlayerGui.HudScreenGui.Main.DisplayKillfeed.Container;

killFeedContainer.ChildAdded:Connect(function(child)
    if (not library.flags.killSay) then return end;
    task.wait();

    if child.TextKillfeed.ContentText:match('(.-)%s') == LocalPlayer.Name then
        local victim = child.TextKillfeed.ContentText:match('.-%s+.-%s+(.+)');

        if victim ~= LocalPlayer.Name then
            commEvent:Fire(6, 'chatted',  killSayMessages[math.random(1, #killSayMessages)] .. ' ' .. victim);
        end;
    end;
end);

local activeControls = {W = false, S = false, A = false, D = false, moving = false}

RunService.RenderStepped:connect(function(step)
    local weaponColor, weaponMaterial = library.flags.weaponColor, library.flags.weaponMaterial;
    local weaponColorValue, weaponMaterialValue = library.flags.weaponColorValue, library.flags.weaponMaterialValue;

    if (weaponColor or weaponMaterial) and camera:FindFirstChild('Main') then
        for _, v in next, camera.Main:GetChildren() do
            if (weaponColor) then v.Color = weaponColorValue; end;
            if (weaponMaterial) then v.Material = weaponMaterialValue; end;

            if (v:IsA('PartOperation') and weaponColorValue) then
                v.UsePartColor = true;
            end;
        end;
    end;

    if library.flags.fly and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('Humanoid') and LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then
        LocalPlayer.Character.Humanoid.PlatformStand = true
        LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 2, 0)
        local pos = LocalPlayer.Character.HumanoidRootPart.Position
        local CameraCF = camera.CFrame
        local hrp = LocalPlayer.Character.HumanoidRootPart
        hrp.CFrame = CFrame.new(pos) * CFrame.Angles(CameraCF:ToEulerAnglesXYZ())
        if activeControls.moving then
            local ToMove
            local look, right = CameraCF.lookVector * 50, CameraCF.rightVector * 50
            if activeControls.W then
                ToMove = look
                if activeControls.A then
                    ToMove = ToMove - right
                elseif activeControls.D then
                    ToMove = ToMove + right
                end
            elseif activeControls.S then
                ToMove = -look
                if activeControls.A then
                    ToMove = ToMove - right
                elseif activeControls.D then
                    ToMove = ToMove + right
                end
            elseif activeControls.A then
                ToMove = -right
            elseif activeControls.D then
                ToMove = right
            end
            LocalPlayer.Character:TranslateBy(ToMove * step)
        end
    end
    if library.flags.knifeAura then
        local cloestCharacter = Utility:getClosestCharacter()
        if (not cloestCharacter) then return end;
        if cloestCharacter then
            local aimPart = getAimPart()
            if aimPart then
                commEvent:Fire(6, 'knifehit', cloestCharacter, tick(), aimPart)
            end
        end
    end
end)

UserInputService.InputBegan:Connect(function(input)
    local key = input.KeyCode.Name;

    if activeControls[key] ~= nil then
        activeControls[key] = true;
        activeControls.moving = true;
    end;
end);

UserInputService.InputEnded:connect(function(input)
    local key = input.KeyCode.Name;

    if activeControls[key] ~= nil then
        activeControls[key] = false;
    end;

    if activeControls.W or activeControls.A or activeControls.S or activeControls.D then
        activeControls.moving = true;
    else
        activeControls.moving = false;
    end;
end)

local function autoDeploy(state)
    if (not state) then
        maid.autoDeploy = nil;
        return;
    end;

    maid.autoDeploy = task.spawn(function()
        while task.wait(0.1) do
            if (menuScreenGuiIsEnabled) then
                print('Attempting to spawn Player...');
                commEvent:Fire(6, 'spawn');
            end;
        end;
    end);
end;

library.OnLoad:Connect(function()
    commEvent:Fire(2, library.flags);

    library.OnFlagChanged:Connect(function()
        commEvent:Fire(2, library.flags);
    end);
end);

local function applyGunModifications(...)
    return commEvent:Fire(3, ...);
end;

_G.event = commEvent;
-- GUI
do
    gunModsSection:AddToggle({
        text = 'No Recoil',
        callback = function(value)
            applyGunModifications('NoRecoil', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'No Flash',
        callback = function(value)
            applyGunModifications('NoFlash', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'No Spread',
        callback = function(value)
            applyGunModifications('NoSpread', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'No Sway',
        callback = function(value)
            applyGunModifications('NoSway', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'Full Auto',
        callback = function(value)
            applyGunModifications('FullAuto', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'Instant Reload',
        callback = function(value)
            applyGunModifications('InstantReload', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'Instant Equip',
        callback = function(value)
            applyGunModifications('InstantEquip', value)
        end
    })

    gunModsSection:AddToggle({
        text = 'Weapon Color',
    }):AddColor({
        flag = 'Weapon Color Value',
    })

    gunModsSection:AddToggle({
        text = 'Weapon Material',
    }):AddList({
        values = materials,
        flag = 'Weapon Material Value'
    })

    gunModsSection:AddToggle({
        text = 'Bullet Tracers'
    }):AddColor({
        flag = 'Bullet Tracers Color'
    })

    gunModsSection:AddList({
        text = 'Bullet Tracers Material',
        values = materials,
    })

    gunModsSection:AddSlider({
        text = 'Bullet Tracers Lifetime',
        textpos = 2,
        value = 2,
        min = 1,
        max = 10
    })

    gunModsSection:AddSlider({
        text = 'Bullet Tracers Alpha',
        textpos = 2,
        value = 6,
        min = 1,
        max = 10
    })

    silentAimSection:AddToggle({
        text = 'Silent Aim'
    })

    silentAimSection:AddSlider({
        text = 'Hit Chance',
        flag = 'Silent Aim Hit Chance',
        value = 100,
        min = 0,
        max = 100
    })

    silentAimSection:AddList({
        text = 'Hit Part',
        flag = 'Silent Aim Hit Part',
        values = {'torso', 'head'}
    })

    silentAimSection:AddToggle({
        text = 'Knife Aura'
    })

    silentAimSection:AddToggle({
        text = 'Frag Teleport'
    })

    localSection:AddToggle({text = 'Walkspeed', callback = function(t)
        commEvent:Fire(7, t and library.flags.walkspeedValue or 16, t and library.flags.walkspeedValue or 16)
    end}):AddSlider({
        flag = 'Walkspeed Value',
        value = 16,
        min = 0,
        max = 100,
        callback = function(value)
            if(not library.flags.walkspeed) then return commEvent:Fire(7, 16) end;
            commEvent:Fire(7, value);
        end
    })

    localSection:AddToggle({
        text = 'Fly',
    })

    localSection:AddToggle({
        text = 'No Fall Damage',
    })

    otherSection:AddToggle({
        text = 'Anti Aim'
    })

    otherSection:AddToggle({
        text = 'Auto Deploy',
        callback = autoDeploy
    })

    otherSection:AddToggle({
        text = 'Kill Say'
    })
end;
